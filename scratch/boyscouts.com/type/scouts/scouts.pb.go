// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scouts.proto

package scouts

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	date "google.golang.org/genproto/googleapis/type/date"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Rank int32

const (
	Rank_RANK_UNKNOWN     Rank = 0
	Rank_RANK_WEBELOS     Rank = 1
	Rank_RANK_BOY_SCOUT   Rank = 2
	Rank_RANK_EAGLE_SCOUT Rank = 3
	Rank_RANK_SPACE_CADET Rank = 4
	Rank_RANK_SAMURAI     Rank = 5
)

var Rank_name = map[int32]string{
	0: "RANK_UNKNOWN",
	1: "RANK_WEBELOS",
	2: "RANK_BOY_SCOUT",
	3: "RANK_EAGLE_SCOUT",
	4: "RANK_SPACE_CADET",
	5: "RANK_SAMURAI",
}

var Rank_value = map[string]int32{
	"RANK_UNKNOWN":     0,
	"RANK_WEBELOS":     1,
	"RANK_BOY_SCOUT":   2,
	"RANK_EAGLE_SCOUT": 3,
	"RANK_SPACE_CADET": 4,
	"RANK_SAMURAI":     5,
}

func (x Rank) String() string {
	return proto.EnumName(Rank_name, int32(x))
}

func (Rank) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18dc8998ca41d2a3, []int{0}
}

type Badge int32

const (
	Badge_BADGE_UNKNOWN        Badge = 0
	Badge_BADGE_WOODWORKING    Badge = 1
	Badge_BADGE_FIRESTARTING   Badge = 2
	Badge_BADGE_RAINMAKING     Badge = 3
	Badge_BADGE_ASSKICKING     Badge = 4
	Badge_BADGE_HEADSCRATCHING Badge = 5
	Badge_BADGE_BALLET         Badge = 6
	Badge_BADGE_FISHING        Badge = 7
)

var Badge_name = map[int32]string{
	0: "BADGE_UNKNOWN",
	1: "BADGE_WOODWORKING",
	2: "BADGE_FIRESTARTING",
	3: "BADGE_RAINMAKING",
	4: "BADGE_ASSKICKING",
	5: "BADGE_HEADSCRATCHING",
	6: "BADGE_BALLET",
	7: "BADGE_FISHING",
}

var Badge_value = map[string]int32{
	"BADGE_UNKNOWN":        0,
	"BADGE_WOODWORKING":    1,
	"BADGE_FIRESTARTING":   2,
	"BADGE_RAINMAKING":     3,
	"BADGE_ASSKICKING":     4,
	"BADGE_HEADSCRATCHING": 5,
	"BADGE_BALLET":         6,
	"BADGE_FISHING":        7,
}

func (x Badge) String() string {
	return proto.EnumName(Badge_name, int32(x))
}

func (Badge) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_18dc8998ca41d2a3, []int{1}
}

type BoyScout struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FullName             string               `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	ShortName            string               `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Birthdate            *date.Date           `protobuf:"bytes,4,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	JoinTime             *timestamp.Timestamp `protobuf:"bytes,11,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	CountryCode          string               `protobuf:"bytes,6,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	LanguageCode         string               `protobuf:"bytes,10,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	PackCode             uint32               `protobuf:"varint,7,opt,name=pack_code,json=packCode,proto3" json:"pack_code,omitempty"`
	Rank                 Rank                 `protobuf:"varint,5,opt,name=rank,proto3,enum=scouts.Rank" json:"rank,omitempty"`
	Badges               []Badge              `protobuf:"varint,8,rep,packed,name=badges,proto3,enum=scouts.Badge" json:"badges,omitempty"`
	FavoriteSongs        []string             `protobuf:"bytes,9,rep,name=favorite_songs,json=favoriteSongs,proto3" json:"favorite_songs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BoyScout) Reset()         { *m = BoyScout{} }
func (m *BoyScout) String() string { return proto.CompactTextString(m) }
func (*BoyScout) ProtoMessage()    {}
func (*BoyScout) Descriptor() ([]byte, []int) {
	return fileDescriptor_18dc8998ca41d2a3, []int{0}
}

func (m *BoyScout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoyScout.Unmarshal(m, b)
}
func (m *BoyScout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoyScout.Marshal(b, m, deterministic)
}
func (m *BoyScout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoyScout.Merge(m, src)
}
func (m *BoyScout) XXX_Size() int {
	return xxx_messageInfo_BoyScout.Size(m)
}
func (m *BoyScout) XXX_DiscardUnknown() {
	xxx_messageInfo_BoyScout.DiscardUnknown(m)
}

var xxx_messageInfo_BoyScout proto.InternalMessageInfo

func (m *BoyScout) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BoyScout) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *BoyScout) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *BoyScout) GetBirthdate() *date.Date {
	if m != nil {
		return m.Birthdate
	}
	return nil
}

func (m *BoyScout) GetJoinTime() *timestamp.Timestamp {
	if m != nil {
		return m.JoinTime
	}
	return nil
}

func (m *BoyScout) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *BoyScout) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *BoyScout) GetPackCode() uint32 {
	if m != nil {
		return m.PackCode
	}
	return 0
}

func (m *BoyScout) GetRank() Rank {
	if m != nil {
		return m.Rank
	}
	return Rank_RANK_UNKNOWN
}

func (m *BoyScout) GetBadges() []Badge {
	if m != nil {
		return m.Badges
	}
	return nil
}

func (m *BoyScout) GetFavoriteSongs() []string {
	if m != nil {
		return m.FavoriteSongs
	}
	return nil
}

func init() {
	proto.RegisterEnum("scouts.Rank", Rank_name, Rank_value)
	proto.RegisterEnum("scouts.Badge", Badge_name, Badge_value)
	proto.RegisterType((*BoyScout)(nil), "scouts.BoyScout")
}

func init() {
	proto.RegisterFile("scouts.proto", fileDescriptor_18dc8998ca41d2a3)
}

var fileDescriptor_18dc8998ca41d2a3 = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x92, 0xcb, 0x6e, 0xda, 0x40,
	0x14, 0x86, 0x4b, 0xb8, 0x04, 0x9f, 0x00, 0x32, 0xa3, 0x34, 0xb2, 0xa8, 0xaa, 0xd2, 0x54, 0x95,
	0xaa, 0x2c, 0x8c, 0x94, 0x2e, 0xba, 0xe8, 0x6a, 0x6c, 0x1c, 0x82, 0x20, 0x76, 0x35, 0x63, 0x84,
	0xda, 0x8d, 0x65, 0xc0, 0x38, 0x34, 0xe0, 0x41, 0xb6, 0xa9, 0x84, 0xd4, 0xd7, 0xe8, 0x9b, 0xf4,
	0x01, 0x3b, 0x17, 0x1b, 0xba, 0x82, 0xf3, 0xfd, 0x9f, 0x0f, 0xff, 0xe0, 0x81, 0x56, 0xb6, 0x64,
	0x87, 0x3c, 0x33, 0xf7, 0x29, 0xcb, 0x19, 0x6a, 0xa8, 0xa9, 0xf7, 0x2e, 0x66, 0x2c, 0xde, 0x46,
	0x03, 0x49, 0x17, 0x87, 0xf5, 0x20, 0xdf, 0xec, 0xa2, 0x2c, 0x0f, 0x77, 0x7b, 0x25, 0xf6, 0x6e,
	0x0a, 0x21, 0x3f, 0xee, 0xa3, 0xc1, 0x2a, 0xcc, 0x23, 0xc5, 0x6f, 0xff, 0x54, 0xa1, 0x69, 0xb1,
	0x23, 0x15, 0x6b, 0x50, 0x07, 0x2e, 0x36, 0x2b, 0xa3, 0xd2, 0xaf, 0x7c, 0xd2, 0x08, 0xff, 0x86,
	0xde, 0x80, 0xb6, 0x3e, 0x6c, 0xb7, 0x41, 0x12, 0xee, 0x22, 0xe3, 0x42, 0xe2, 0xa6, 0x00, 0x2e,
	0x9f, 0xd1, 0x5b, 0x80, 0xec, 0x99, 0xa5, 0xb9, 0x4a, 0xab, 0x32, 0xd5, 0x24, 0x91, 0xf1, 0x00,
	0xb4, 0xc5, 0x26, 0xcd, 0x9f, 0xc5, 0x6f, 0x19, 0x35, 0x9e, 0x5e, 0xdd, 0x77, 0x4d, 0x55, 0xc2,
	0x14, 0x25, 0xcc, 0x21, 0x0f, 0xc8, 0xd9, 0x41, 0x5f, 0x40, 0xfb, 0xc9, 0x36, 0x49, 0x20, 0x9a,
	0x1b, 0x57, 0xf2, 0x81, 0x5e, 0xf9, 0x40, 0x79, 0x2c, 0xd3, 0x2f, 0x8f, 0x45, 0x9a, 0x42, 0x16,
	0x23, 0x7a, 0x0f, 0x2d, 0xde, 0x3e, 0xc9, 0xd3, 0x63, 0xb0, 0x64, 0xab, 0xc8, 0x68, 0xc8, 0x2a,
	0x57, 0x05, 0xb3, 0x39, 0x42, 0x1f, 0xa0, 0xbd, 0x0d, 0x93, 0xf8, 0x10, 0xc6, 0x91, 0x72, 0x40,
	0x3a, 0xad, 0x12, 0x4a, 0x89, 0x9f, 0x76, 0x1f, 0x2e, 0x5f, 0x94, 0x70, 0xc9, 0x85, 0x36, 0x69,
	0x0a, 0x20, 0xc3, 0x3e, 0xd4, 0xd2, 0x30, 0x79, 0x31, 0xea, 0x9c, 0x77, 0xee, 0x5b, 0x66, 0xf1,
	0x16, 0x08, 0x67, 0x44, 0x26, 0xe8, 0x23, 0x34, 0x16, 0xe1, 0x2a, 0x8e, 0x32, 0xa3, 0xd9, 0xaf,
	0x72, 0xa7, 0x5d, 0x3a, 0x96, 0xa0, 0xa4, 0x08, 0xb9, 0xd6, 0x59, 0x87, 0xbf, 0x58, 0xba, 0xc9,
	0xa3, 0x20, 0x63, 0x49, 0x9c, 0x19, 0x1a, 0xd7, 0x35, 0xd2, 0x2e, 0x29, 0x15, 0xf0, 0xee, 0x37,
	0xd4, 0xc4, 0x6e, 0xa4, 0x43, 0x8b, 0x60, 0x77, 0x12, 0xcc, 0xdc, 0x89, 0xeb, 0xcd, 0x5d, 0xfd,
	0xd5, 0x89, 0xcc, 0x1d, 0xcb, 0x99, 0x7a, 0x54, 0xaf, 0x20, 0x04, 0x1d, 0x49, 0x2c, 0xef, 0x7b,
	0x40, 0x6d, 0x6f, 0xe6, 0xeb, 0x17, 0xe8, 0x1a, 0x74, 0xc9, 0x1c, 0x3c, 0x9a, 0x3a, 0x05, 0xad,
	0x9e, 0x28, 0xfd, 0x86, 0x6d, 0x27, 0xb0, 0xf1, 0xd0, 0xf1, 0xf5, 0xda, 0x69, 0x23, 0xc5, 0x4f,
	0x33, 0x82, 0xc7, 0x7a, 0xfd, 0xee, 0x6f, 0x05, 0xea, 0xb2, 0x36, 0xea, 0x42, 0xdb, 0xc2, 0xc3,
	0x91, 0xf3, 0x5f, 0x81, 0xd7, 0xd0, 0x55, 0x68, 0xee, 0x79, 0xc3, 0xb9, 0x47, 0x26, 0x63, 0x77,
	0xc4, 0x5b, 0xdc, 0x00, 0x52, 0xf8, 0x61, 0x4c, 0x1c, 0xea, 0x63, 0xe2, 0x0b, 0x2e, 0x9b, 0x28,
	0xce, 0x57, 0xbb, 0x4f, 0x58, 0xda, 0xd5, 0x33, 0xc5, 0x94, 0x4e, 0xc6, 0xb6, 0xa4, 0x35, 0x64,
	0xc0, 0xb5, 0xa2, 0x8f, 0x0e, 0x1e, 0x52, 0x9b, 0x60, 0xdf, 0x7e, 0x14, 0x49, 0x5d, 0x74, 0x54,
	0x89, 0x85, 0xa7, 0x53, 0xde, 0xba, 0x71, 0x6e, 0xf6, 0x30, 0xa6, 0x52, 0xba, 0xb4, 0x6e, 0x7f,
	0xf4, 0x17, 0xec, 0x58, 0xfc, 0xed, 0x4b, 0xb6, 0x53, 0xb7, 0x5d, 0xcd, 0x5f, 0xd5, 0xc7, 0xa2,
	0x21, 0xef, 0xd2, 0xe7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x85, 0x6f, 0x5b, 0x48, 0x03,
	0x00, 0x00,
}
