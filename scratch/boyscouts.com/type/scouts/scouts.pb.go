// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: src/boyscouts.com/type/scouts/scouts.proto

package scouts

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	date "google.golang.org/genproto/googleapis/type/date"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Rank int32

const (
	Rank_RANK_UNKNOWN     Rank = 0
	Rank_RANK_WEBELOS     Rank = 1
	Rank_RANK_BOY_SCOUT   Rank = 2
	Rank_RANK_EAGLE_SCOUT Rank = 3
	Rank_RANK_SPACE_CADET Rank = 4
	Rank_RANK_SAMURAI     Rank = 5
)

// Enum value maps for Rank.
var (
	Rank_name = map[int32]string{
		0: "RANK_UNKNOWN",
		1: "RANK_WEBELOS",
		2: "RANK_BOY_SCOUT",
		3: "RANK_EAGLE_SCOUT",
		4: "RANK_SPACE_CADET",
		5: "RANK_SAMURAI",
	}
	Rank_value = map[string]int32{
		"RANK_UNKNOWN":     0,
		"RANK_WEBELOS":     1,
		"RANK_BOY_SCOUT":   2,
		"RANK_EAGLE_SCOUT": 3,
		"RANK_SPACE_CADET": 4,
		"RANK_SAMURAI":     5,
	}
)

func (x Rank) Enum() *Rank {
	p := new(Rank)
	*p = x
	return p
}

func (x Rank) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Rank) Descriptor() protoreflect.EnumDescriptor {
	return file_src_boyscouts_com_type_scouts_scouts_proto_enumTypes[0].Descriptor()
}

func (Rank) Type() protoreflect.EnumType {
	return &file_src_boyscouts_com_type_scouts_scouts_proto_enumTypes[0]
}

func (x Rank) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Rank.Descriptor instead.
func (Rank) EnumDescriptor() ([]byte, []int) {
	return file_src_boyscouts_com_type_scouts_scouts_proto_rawDescGZIP(), []int{0}
}

type Badge int32

const (
	Badge_BADGE_UNKNOWN        Badge = 0
	Badge_BADGE_WOODWORKING    Badge = 1
	Badge_BADGE_FIRESTARTING   Badge = 2
	Badge_BADGE_RAINMAKING     Badge = 3
	Badge_BADGE_ASSKICKING     Badge = 4
	Badge_BADGE_HEADSCRATCHING Badge = 5
	Badge_BADGE_BALLET         Badge = 6
	Badge_BADGE_FISHING        Badge = 7
)

// Enum value maps for Badge.
var (
	Badge_name = map[int32]string{
		0: "BADGE_UNKNOWN",
		1: "BADGE_WOODWORKING",
		2: "BADGE_FIRESTARTING",
		3: "BADGE_RAINMAKING",
		4: "BADGE_ASSKICKING",
		5: "BADGE_HEADSCRATCHING",
		6: "BADGE_BALLET",
		7: "BADGE_FISHING",
	}
	Badge_value = map[string]int32{
		"BADGE_UNKNOWN":        0,
		"BADGE_WOODWORKING":    1,
		"BADGE_FIRESTARTING":   2,
		"BADGE_RAINMAKING":     3,
		"BADGE_ASSKICKING":     4,
		"BADGE_HEADSCRATCHING": 5,
		"BADGE_BALLET":         6,
		"BADGE_FISHING":        7,
	}
)

func (x Badge) Enum() *Badge {
	p := new(Badge)
	*p = x
	return p
}

func (x Badge) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Badge) Descriptor() protoreflect.EnumDescriptor {
	return file_src_boyscouts_com_type_scouts_scouts_proto_enumTypes[1].Descriptor()
}

func (Badge) Type() protoreflect.EnumType {
	return &file_src_boyscouts_com_type_scouts_scouts_proto_enumTypes[1]
}

func (x Badge) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Badge.Descriptor instead.
func (Badge) EnumDescriptor() ([]byte, []int) {
	return file_src_boyscouts_com_type_scouts_scouts_proto_rawDescGZIP(), []int{1}
}

type BoyScout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // RFC 4122 UUID
	FullName      string               `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`    // e.g. Samayamantri Venkata Rama Naga Butchi Anjaneya Satya Krishna Vijay
	ShortName     string               `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"` // e.g. Alice
	Birthdate     *date.Date           `protobuf:"bytes,4,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	JoinTime      *timestamp.Timestamp `protobuf:"bytes,11,opt,name=join_time,json=joinTime,proto3" json:"join_time,omitempty"`
	CountryCode   string               `protobuf:"bytes,6,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`     // ISO 3166-1 alpha-3 upper-case
	LanguageCode  string               `protobuf:"bytes,10,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"` // ISO 639-1 two-character lower-case
	PackCode      uint32               `protobuf:"varint,7,opt,name=pack_code,json=packCode,proto3" json:"pack_code,omitempty"`             // as administered by the Head Wolf
	Rank          Rank                 `protobuf:"varint,5,opt,name=rank,proto3,enum=scouts.Rank" json:"rank,omitempty"`
	Badges        []Badge              `protobuf:"varint,8,rep,packed,name=badges,proto3,enum=scouts.Badge" json:"badges,omitempty"`
	FavoriteSongs []string             `protobuf:"bytes,9,rep,name=favorite_songs,json=favoriteSongs,proto3" json:"favorite_songs,omitempty"` // formatted as  "Artist Name - Song Title"
	// playing with naming conventions
	IANACountryCode string `protobuf:"bytes,12,opt,name=IANA_country_code,json=IANACountryCode,proto3" json:"IANA_country_code,omitempty"`
}

func (x *BoyScout) Reset() {
	*x = BoyScout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_boyscouts_com_type_scouts_scouts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoyScout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoyScout) ProtoMessage() {}

func (x *BoyScout) ProtoReflect() protoreflect.Message {
	mi := &file_src_boyscouts_com_type_scouts_scouts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoyScout.ProtoReflect.Descriptor instead.
func (*BoyScout) Descriptor() ([]byte, []int) {
	return file_src_boyscouts_com_type_scouts_scouts_proto_rawDescGZIP(), []int{0}
}

func (x *BoyScout) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BoyScout) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *BoyScout) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *BoyScout) GetBirthdate() *date.Date {
	if x != nil {
		return x.Birthdate
	}
	return nil
}

func (x *BoyScout) GetJoinTime() *timestamp.Timestamp {
	if x != nil {
		return x.JoinTime
	}
	return nil
}

func (x *BoyScout) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *BoyScout) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *BoyScout) GetPackCode() uint32 {
	if x != nil {
		return x.PackCode
	}
	return 0
}

func (x *BoyScout) GetRank() Rank {
	if x != nil {
		return x.Rank
	}
	return Rank_RANK_UNKNOWN
}

func (x *BoyScout) GetBadges() []Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

func (x *BoyScout) GetFavoriteSongs() []string {
	if x != nil {
		return x.FavoriteSongs
	}
	return nil
}

func (x *BoyScout) GetIANACountryCode() string {
	if x != nil {
		return x.IANACountryCode
	}
	return ""
}

var File_src_boyscouts_com_type_scouts_scouts_proto protoreflect.FileDescriptor

var file_src_boyscouts_com_type_scouts_scouts_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x72, 0x63, 0x2f, 0x62, 0x6f, 0x79, 0x73, 0x63, 0x6f, 0x75, 0x74, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x63, 0x6f, 0x75, 0x74, 0x73, 0x2f,
	0x73, 0x63, 0x6f, 0x75, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x63,
	0x6f, 0x75, 0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x03,
	0x0a, 0x08, 0x42, 0x6f, 0x79, 0x53, 0x63, 0x6f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x09, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x73, 0x63, 0x6f, 0x75, 0x74, 0x73, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x63, 0x6f, 0x75, 0x74, 0x73,
	0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x06, 0x62, 0x61, 0x64, 0x67, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x6f, 0x6e, 0x67, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x53, 0x6f, 0x6e, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x49, 0x41, 0x4e, 0x41, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x49, 0x41, 0x4e, 0x41, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x2a, 0x7c, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x4e,
	0x4b, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52,
	0x41, 0x4e, 0x4b, 0x5f, 0x57, 0x45, 0x42, 0x45, 0x4c, 0x4f, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x42, 0x4f, 0x59, 0x5f, 0x53, 0x43, 0x4f, 0x55, 0x54, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x45, 0x41, 0x47, 0x4c, 0x45, 0x5f,
	0x53, 0x43, 0x4f, 0x55, 0x54, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x41, 0x4e, 0x4b, 0x5f,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x44, 0x45, 0x54, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x52, 0x41, 0x4e, 0x4b, 0x5f, 0x53, 0x41, 0x4d, 0x55, 0x52, 0x41, 0x49, 0x10, 0x05, 0x2a,
	0xb4, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x41, 0x44,
	0x47, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x42, 0x41, 0x44, 0x47, 0x45, 0x5f, 0x57, 0x4f, 0x4f, 0x44, 0x57, 0x4f, 0x52, 0x4b, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x41, 0x44, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x52,
	0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x41, 0x44, 0x47, 0x45, 0x5f, 0x52, 0x41, 0x49, 0x4e, 0x4d, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x44, 0x47, 0x45, 0x5f, 0x41, 0x53, 0x53, 0x4b, 0x49,
	0x43, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x41, 0x44, 0x47, 0x45,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x53, 0x43, 0x52, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10,
	0x05, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x41, 0x44, 0x47, 0x45, 0x5f, 0x42, 0x41, 0x4c, 0x4c, 0x45,
	0x54, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x41, 0x44, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x53,
	0x48, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x42, 0x22, 0x5a, 0x20, 0x62, 0x6f, 0x79, 0x73, 0x63, 0x6f,
	0x75, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x73, 0x63, 0x6f,
	0x75, 0x74, 0x73, 0x3b, 0x73, 0x63, 0x6f, 0x75, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_src_boyscouts_com_type_scouts_scouts_proto_rawDescOnce sync.Once
	file_src_boyscouts_com_type_scouts_scouts_proto_rawDescData = file_src_boyscouts_com_type_scouts_scouts_proto_rawDesc
)

func file_src_boyscouts_com_type_scouts_scouts_proto_rawDescGZIP() []byte {
	file_src_boyscouts_com_type_scouts_scouts_proto_rawDescOnce.Do(func() {
		file_src_boyscouts_com_type_scouts_scouts_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_boyscouts_com_type_scouts_scouts_proto_rawDescData)
	})
	return file_src_boyscouts_com_type_scouts_scouts_proto_rawDescData
}

var file_src_boyscouts_com_type_scouts_scouts_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_src_boyscouts_com_type_scouts_scouts_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_src_boyscouts_com_type_scouts_scouts_proto_goTypes = []interface{}{
	(Rank)(0),                   // 0: scouts.Rank
	(Badge)(0),                  // 1: scouts.Badge
	(*BoyScout)(nil),            // 2: scouts.BoyScout
	(*date.Date)(nil),           // 3: google.type.Date
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_src_boyscouts_com_type_scouts_scouts_proto_depIdxs = []int32{
	3, // 0: scouts.BoyScout.birthdate:type_name -> google.type.Date
	4, // 1: scouts.BoyScout.join_time:type_name -> google.protobuf.Timestamp
	0, // 2: scouts.BoyScout.rank:type_name -> scouts.Rank
	1, // 3: scouts.BoyScout.badges:type_name -> scouts.Badge
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_src_boyscouts_com_type_scouts_scouts_proto_init() }
func file_src_boyscouts_com_type_scouts_scouts_proto_init() {
	if File_src_boyscouts_com_type_scouts_scouts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_boyscouts_com_type_scouts_scouts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoyScout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_boyscouts_com_type_scouts_scouts_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_boyscouts_com_type_scouts_scouts_proto_goTypes,
		DependencyIndexes: file_src_boyscouts_com_type_scouts_scouts_proto_depIdxs,
		EnumInfos:         file_src_boyscouts_com_type_scouts_scouts_proto_enumTypes,
		MessageInfos:      file_src_boyscouts_com_type_scouts_scouts_proto_msgTypes,
	}.Build()
	File_src_boyscouts_com_type_scouts_scouts_proto = out.File
	file_src_boyscouts_com_type_scouts_scouts_proto_rawDesc = nil
	file_src_boyscouts_com_type_scouts_scouts_proto_goTypes = nil
	file_src_boyscouts_com_type_scouts_scouts_proto_depIdxs = nil
}
